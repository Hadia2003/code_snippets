pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        // Clone the application repo
        git url: 'https://github.com/Hadia2003/code_snippets.git', branch: 'master'
      }
    }

    stage('Build & Deploy') {
      steps {
        // Navigate into the Flask blog directory
        dir('Python/Flask_Blog/04-Database') {
          // Tear down any existing containers & volumes, then rebuild from scratch
          sh '''
            docker-compose -p flaskblog_ci -f docker-compose.yml down -v || true
            docker-compose -p flaskblog_ci -f docker-compose.yml up -d --build --force-recreate
          '''
        }
      }
    }

    stage('Test') {
      // Use the Maven-Chrome image as the agent for this stage
      agent {
        docker {
          image 'markhobson/maven-chrome:latest'
          // you can add extra args here, e.g. '--user root' or networking flags
        }
      }
      steps {
        // Clone your Selenium test cases
        git url: 'https://github.com/Hadia2003/selenium_testcases.git', branch: 'main'

        // Run Maven tests
        sh 'mvn clean test -B'
      }
      post {
        always {
          // Archive JUnit reports
          junit 'target/surefire-reports/*.xml'
        }
      }
    }
  }

  post {
    always {
      // Print out the status of the running containers for debugging
      dir('Python/Flask_Blog/04-Database') {
        sh 'docker-compose -p flaskblog_ci -f docker-compose.yml ps'
      }
    }
  }
}
